using System;
using System.Collections.Generic;
using System.Data.SqlTypes;
using System.Text;
using System.Threading;

namespace fremvisning_codereview
{
    public class progressBar
    {
        public string Signs = "";
        public int TotalSigns = 20;
        public void ProgressBar()
        { 
            PrintProgressBar(true);
            for (var i = 0; i < TotalSigns; i++)
            {
                Signs = AddHashTag(i) + AddSpace(TotalSigns - i);
                PrintProgressBar(true);
                Thread.Sleep(150);
            }
            Signs = "";
            PrintProgressBar(false);
        }

        public string AddSpace(int count)
        {
            var spaceCount = "";
            for (var i = count; i > 0; i--)
            {
                spaceCount += " ";
            }
            return spaceCount;
        }

        public string AddHashTag(int count)
        {
            var hashTagCount = "";
            for (var i = 0; i < count; i++)
            {
                hashTagCount += "#";
            }
            return hashTagCount;
        }

        public void PrintProgressBar(bool inProgress)
        {
            Console.Clear();
            if (inProgress)
            {
                Console.WriteLine($"Hack in progress... [{Signs}]"); 
            }
            else
            {
                AnimConsole.WriteLine( @"Hacking completed
................................................................................
............................,/#&@@@@@@@@@@@@@@@@@@@@#*,.........................
...................@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%,...............
................@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/............
............../@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#...........
.............&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@...........
............/@@@@@@............(@@@@@@@@@@@@@@@@@@@@,...........#@@@@@..........
............@@@@@............../@@&@@@@@@@@@@@@@@@@%..............#@@@*.........
...........#@@@@./%@@@@%/..........&@@@@@@@@@@@@*.........*#&@@@&(,(@@&.........
...........@@@@@@@@@@@@@@@@@@&.......@@@@@@@@@,....../@@@@@@@@@@@@@@@@@.........
...........@@@@@@@@@@@@@@@@@@@@@&...@@@@@@@@@@@#../@@@@@@@@@@@@@@@@@@@@.........
...........@@@@@@@@@@(../&@%/,. &@@.*@@@@@@@@@&.&@/..(@@@@@(..@@@@@@@@@*........
..........,@@@&%@@@..%.. ......../.&@@#@@@@@@&@%............ ,*.@@@%&@@/........
...........@@@@.. ...#@&/*...,(&#.,@@&*@@@@@#(@@(..%&&%#%%&@%,.....*(@@(........
.......... @@/&@@@@@@@@@%##%%@@@@@@@@..@@@@@(.@@@@@@@@@@@@@@@@@@@@@@@/@*........
...........@@@@@@@@@@@@@@@@@@@@@@@@@,.,@@@@@(..@@@@@@@@@@@@@@@@@@@@@@@@,........
...........&@@@@@@@@@@@@@@@@@@@@@@@...*@@@@@&...&@@@@@@@@@@@@@@@@@@@@@@.........
...........(@@@@@@@@@@@@@@@@@@@@@..@&.%@@@@@@.(@,.@@@@@@@@@@@@@@@@@@@@@.........
............@@*@@@@@@@@@@@@&...&,@@@*.@@@@@@@.*@@@/(...&@@@@@@@@@@@@/@&.........
............@@@..........,#@@@@@*@@@@.@@@@@@@.(@@@#@@@@@&*........  @@..........
.............@@@..(&...@@@@@@@@@@@@@%&@@*,,%@@@@@@@@@@@@@@@@...#,..@@@..........
.............&@@@..,@,...@@@@@@@@@@&...... ..../@@@@@@@@@@@...@...@@@,..........
..............@@@@,..@@................,@@@*............. ..,@..(@@@&...........
...............@@@@@...&@*....... .. .@@@@@@@*.......... *&@...@@@@@............
...............*@@@@@#./&.&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&.%,.&@@@@&.............
.................@@@@@@/.@@@@@%%@@@@@@@@@@@@@@@@@@@(%@@@@&.%@@@@@(..............
..................,@@@@@@(*@@@@@@@@@@@@.....%@@@@@@@@@@@.%@@@@@%................
.....................@@@@@@#%@@@@@@@@@@&...#@@@@@@@@@@(&@@@@@*..................
.......................%@@@@@@@@@@@@@@@.....@@@@@@@@@@@@@@@.....................
..........................@@@@@@@@@@@@@.....@@@@@@@@@@@@(.......................
.............................@@@@@@@@@@.....@@@@@@@@@&..........................
................................@@@@@@@%.../@@@@@@@.............................
.................................../@@@@...@@@@(................................
................................................................................");
                
            }

        }
    }

    internal class AnimConsole
    {
        public static void WriteLine(string txt)
        {
            var sleepTime = 100;
            var lines = txt.Split(Environment.NewLine);
            foreach (var line in lines)
            {
                Console.WriteLine(line);
                Thread.Sleep(sleepTime);
                sleepTime += 10;
            }
        }
    }
}


